apiVersion: argoproj.io/v1alpha1
kind: Workflow                  #new type of k8s spec
metadata:
  generateName: nlp-adapt-wf-    #name of workflow spec
spec:
  entrypoint: nlp-adapt          #invoke the build template
  volumes:
  - name: test-volume
    hostPath:
      path: /Users/gregsilverman/workspace/test # must match host directory in minikube; cannot be symlinked
      # path: /Volumes/GrenziData/development/data
  
  templates:

  - name: nlp-adapt
    steps:
    - - name: amq-deployment
        template: amq-server-d
    - - name: amq-service
        template: amq-server-s
   
  
  - name: amq-server-d
    resource:
      action: create
      manifest: |
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: amq
        spec:
          selector:
            matchLabels:
              app: amq
              track: stable
          template:
            metadata:
              labels:
                app: es
                track: stable
          
            spec:
              containers:
              - image: ahc-nlpie-docker.artifactory.umn.edu/activemq
                imagePullPolicy: Never
                name: amq
                ports:
                - containerPort: 61616
                - containerPort: 8161
                volumeMounts:
                - name: test-data
                  mountPath: /opt/activemq/data
                  readOnly: false  
                - name: test-conf
                  mountPath: /opt/activemq/conf
                  readOnly: false  
              
              volumes:
              - name: test-data
                hostPath:
                  path:  /home/gms/projects/k8s/amq/data
              - name: test-conf
                hostPath:
                  path:  /home/gms/projects/k8s/amq/conf


  - name: amq-server-s
    resource:
      action: create
      manifest: |
        apiVersion: v1
        kind: Service
        metadata:
          name: amq
          namespace: default
          labels:
            app: amq

        spec:
          selector:
            app: amq
          ports:
          - name: test1 
            protocol: TCP
            port: 8161
            targetPort: 8161
            nodePort: 31345
          - name: test2 
            protocol: TCP
            port: 61616
            targetPort: 61616
            nodePort: 31344

          type: NodePort
       
  - name: nlptab-server-d
    resource:
      action: create
      manifest: |
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: nlptab
        spec:
          selector:
            matchLabels:
              app: nlptab
              track: stable
          template:
            metadata:
              labels:
                app: nlptab
                track: stable
          
            spec:
              containers:
              - image: horcle/nlptab
                imagePullPolicy: Never
                name: nlptab
                ports:
                - containerPort: 8000
                volumeMounts:
                - name: test-volume
                  mountPath: /data
                  readOnly: false  
              
              volumes:
              - name: test-volume
                hostPath:
                  path: /Users/gregsilverman/workspace/test 


  - name: nlptab-server-s
    resource:
      action: create
      manifest: |
        apiVersion: v1
        kind: Service
        metadata:
          name: nlptab
          namespace: default
          labels:
            app: nlptab

        spec:
          selector:
            app: nlptab
          ports:
          - port: 80
            targetPort: 8000
            nodePort: 31234
          type: NodePort

  - name: run-biomedicus
    container:
      image: horcle/biomedicus
      imagePullPolicy: Never
      command: ["/usr/share/biomedicus/scripts/run_biomedicus.sh"] 
      volumeMounts:
      - name: test-volume
        mountPath: /data
        readOnly: false

  - name: run-metamap
    container:
      image: horcle/metamap
      imagePullPolicy: Never
      command: ["/usr/share/public_mm/scripts/run_metamap.sh"] 
      volumeMounts:
      - name: test-volume
        mountPath: /data
        readOnly: false

  - name: run-ctakes
    container:
      image: horcle/ctakes
      imagePullPolicy: Never
      command: ["/usr/share/ctakes/scripts/run_ctakes.sh"] 
      volumeMounts:
      - name: test-volume
        mountPath: /data
        readOnly: false

  - name: run-clamp
    container:
      image: horcle/clamp
      imagePullPolicy: Never
      command: ["/usr/share/clamp/scripts/run_clamp.sh"] 
      volumeMounts:
      - name: test-volume
        mountPath: /data
        readOnly: false
